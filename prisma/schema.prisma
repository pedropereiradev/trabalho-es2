// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Aluno {
  id              Int        @id @default(autoincrement())
  nome            String     @db.VarChar(60)
  turma           String     @db.VarChar(60)
  observacao      String?    @db.VarChar(120)
  nomeResponsavel String     @db.VarChar(60)
  telResponsavel  String     @db.VarChar(60)
  numCompras      Int        @default(0)
  totalCompras    Float      @default(0)
  numDepositos    Int        @default(0)
  totalDepositos  Float      @default(0)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  gastos          Gasto[]
  depositos       Deposito[]

  @@map("alunos")
}

model Gasto {
  id          Int      @id @default(autoincrement())
  descricao   String   @db.VarChar(60)
  data        DateTime @default(now())
  lanche      String   @db.VarChar(60)
  valorLanche Float
  alunoId     Int
  aluno       Aluno    @relation(fields: [alunoId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("gastos")
}

model Deposito {
  id        Int      @id @default(autoincrement())
  data      DateTime @default(now())
  tipo      String   @db.VarChar(60)
  alunoId   Int
  aluno     Aluno    @relation(fields: [alunoId], references: [id])
  valor     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("depositos")
}
